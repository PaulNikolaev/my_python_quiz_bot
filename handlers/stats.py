from aiogram import Router, types
from aiogram.filters import Command
from database.db import get_top_scores, get_user_latest_result
from datetime import datetime

router = Router()


@router.message(Command("stats"))
async def show_stats(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /stats, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–æ–≤.
    """
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-5 –∏–≥—Ä–æ–∫–æ–≤
    top_players = await get_top_scores(limit=5)
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_result = await get_user_latest_result(message.from_user.id)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–æ–ø–∞ –∏–≥—Ä–æ–∫–æ–≤
    stats_message = "**üèÜ –¢–æ–ø-5 –∏–≥—Ä–æ–∫–æ–≤:**\n\n"
    if not top_players:
        stats_message += "–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–æ—à—ë–ª –∫–≤–∏–∑. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É—Å—Ç–∞.\n\n"
    else:
        for i, player in enumerate(top_players):
            timestamp_obj = datetime.fromisoformat(player['timestamp'])
            formatted_timestamp = timestamp_obj.strftime("%H:%M %d.%m.%Y")

            stats_message += (
                f"**{i + 1}.** –ò–≥—Ä–æ–∫: `{player['user_id']}`\n"
                f"   - –†–µ–∑—É–ª—å—Ç–∞—Ç: **{player['score']}** –∏–∑ **{player['total_questions']}**\n"
                f"   - –î–∞—Ç–∞: {formatted_timestamp}\n\n"
            )

    stats_message += "---\n\n"

    # –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_result:
        timestamp_obj = datetime.fromisoformat(user_result['timestamp'])
        formatted_timestamp = timestamp_obj.strftime("%H:%M %d.%m.%Y")
        stats_message += (
            f"**–¢–≤–æ–π –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:**\n"
            f"   - **{user_result['score']}** –∏–∑ **{user_result['total_questions']}**\n"
            f"   - –î–∞—Ç–∞: {formatted_timestamp}"
        )
    else:
        stats_message += "–¢—ã –µ—â—ë –Ω–µ –ø—Ä–æ—à—ë–ª –Ω–∏ –æ–¥–Ω–æ–≥–æ –∫–≤–∏–∑–∞. –ó–∞–ø—É—Å—Ç–∏ /quiz, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!"

    await message.answer(stats_message, parse_mode="Markdown")
